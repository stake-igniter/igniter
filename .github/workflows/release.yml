name: App Release

on:
  push:
    tags:
      - 'middleman-v*.*.*'
      - 'middleman-workflows-v*.*.*'
      - 'provider-v*.*.*'
  workflow_dispatch:
    inputs:
      APP_NAME:
        description: 'The application name (e.g., middleman, middleman-workflows, provider)'
        required: true
        type: string
      VERSION:
        description: 'The application version (e.g., v1.0.0)'
        required: true
        type: string
      PUSH:
        description: 'Should push to Registry?'
        required: true
        type: boolean

permissions:
  packages: write
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.5.2

      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          cache: 'pnpm'
          node-version: '18.20.3'

      - name: Set Application Name and Version
        id: set-vars
        run: |
          if [ "${{ github.event_name }}" == "push" ]; then
            # Extract app name and version from the tag name on push event
            APP_NAME="${GITHUB_REF_NAME%-v*}"
            VERSION="${GITHUB_REF_NAME##*-}"
          else
            # Use inputs from workflow_dispatch event
            APP_NAME="${{ inputs.APP_NAME }}"
            VERSION="${{ inputs.VERSION }}"
          
            # Ensure APP_NAME and VERSION are provided
            if [ -z "$APP_NAME" ] || [ -z "$VERSION" ]; then
              echo "Error: APP_NAME and VERSION must be provided when triggering manually."
              exit 1
            fi
          fi
          echo "APP_NAME=$APP_NAME" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Formatted APP_NAME: $APP_NAME"
          echo "Formatted VERSION: $VERSION"

      - name: Log Parsed Variables
        run: |
          echo "App Name: $APP_NAME"
          echo "Version: $VERSION"

      - name: Prepare docker context
        run: |
          pnpm exec turbo prune @igniter/$APP_NAME --out-dir ./out/$APP --docker

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/stake-igniter/${{ env.APP_NAME }}
          tags: |
            type=match,pattern=v(.*),group=1,value=${{ env.VERSION }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./apps/${{ env.APP_NAME }}/Dockerfile
          push: ${{ github.event_name == 'push' && github.ref_type == 'tag' || github.event_name == 'workflow_dispatch' && inputs.PUSH }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
